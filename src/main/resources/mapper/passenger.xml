<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.seask.model.mapper.PassengerMapper">
    <!-- 승차버튼 누를 때 -->
    <insert id="insertBoardingPassenger" parameterType="Passenger">
        insert into boarding_passengers (bus_route_id, veh_id ,origin_station, destination_station, is_help, is_board)
        values (#{bus_route_id}, #{veh_id}, #{origin_station}, #{destination_station}, #{is_help}, 0);
    </insert>

    <!-- 하차버튼 누를 때 --> <!-- 일단은 도착지 기준으로 지움, 나중에 물어보자 -->
    <delete id="deleteBoardingPassenger" parameterType="String">
        delete
        from boarding_passengers
        where origin_station = #{origin_station}
          and destination_station = #{destination_station}
    </delete>

    <!-- 탑승완료 누를 때 -->
    <update id="updateIsBoard" parameterType="Passenger">
        update boarding_passengers
        set is_board= true
        where origin_station = #{origin_station}
          and destination_station = #{destination_station} and bus_route_id = #{bus_route_id} and veh_id = #{veh_id}
    </update>

    <!-- 중간에 도움 요청 누룰 수 있도록 -->
    <update id="updateIsHelp" parameterType="Passenger">
        update boarding_passengers
        set is_help = true
        where origin_station = #{origin_station}
          and destination_station = #{destination_station} and bus_route_id = #{bus_route_id} and veh_id = #{veh_id}
    </update>

    <!-- 역 이름 검색-->
    <select id="selectStationBySnm" parameterType="Station" resultType="Station">
        SELECT
            node_id,
            ars_id,
        station_name,
        x,
        y,
        (6371 * ACOS(COS(RADIANS(#{y})) * COS(RADIANS(y)) * COS(RADIANS(x) - RADIANS(#{x})) + SIN(RADIANS(#{y})) * SIN(RADIANS(y)))) AS distance
        FROM
        station
        where station_name LIKE concat('%', #{station_name}, '%')
        HAVING distance &lt; 0.3
        ORDER BY distance
    </select>

    <!-- 노선 검색 -->
    <select id="selectRoutebyRoutenm" parameterType="Route" resultType="Route">
        select * from route where route_name LIKE concat('%', #{route_name}, '%')
    </select>

    <!-- 순번 조회-->
    <select id="selectOrdByRidAndAid">
        select ord from all_station_route where bus_route_id = #{bus_route_id} and ars_id = #{ars_id}
    </select>


</mapper>